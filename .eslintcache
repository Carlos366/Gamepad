[{"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\index.js":"1","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\App.js":"2","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\reportWebVitals.js":"3","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Firebase.js":"4","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\Reducers\\root.js":"5","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Games.js":"6","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Game.js":"7","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Xbox.js":"8","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\PC.js":"9","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Nintendo.js":"10","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Login.js":"11","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Upcoming.js":"12","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\signUp.js":"13","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\PlayStation.js":"14","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Favorites.js":"15","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Results.js":"16","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\Reducers\\favoriteReducer.js":"17","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\Reducers\\authReducer.js":"18","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Header.js":"19","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\actions\\AuthActions.js":"20","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\actions\\FavoriteActions.js":"21","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\SignOutLinks.js":"22","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\SignInLinks.js":"23","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Search.js":"24"},{"size":1185,"mtime":1612107754000,"results":"25","hashOfConfig":"26"},{"size":1421,"mtime":1613927020000,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499148100000,"results":"28","hashOfConfig":"26"},{"size":536,"mtime":1611939172000,"results":"29","hashOfConfig":"26"},{"size":417,"mtime":1611958444000,"results":"30","hashOfConfig":"26"},{"size":5249,"mtime":1655981195100,"results":"31","hashOfConfig":"26"},{"size":10816,"mtime":1655981252683,"results":"32","hashOfConfig":"26"},{"size":5248,"mtime":1655981078102,"results":"33","hashOfConfig":"26"},{"size":5246,"mtime":1655981195119,"results":"34","hashOfConfig":"26"},{"size":5252,"mtime":1655981195110,"results":"35","hashOfConfig":"26"},{"size":2727,"mtime":1614109544000,"results":"36","hashOfConfig":"26"},{"size":5885,"mtime":1655981089783,"results":"37","hashOfConfig":"26"},{"size":3264,"mtime":1614109544000,"results":"38","hashOfConfig":"26"},{"size":5255,"mtime":1655981136180,"results":"39","hashOfConfig":"26"},{"size":1815,"mtime":1614297027387,"results":"40","hashOfConfig":"26"},{"size":2816,"mtime":1648935752748,"results":"41","hashOfConfig":"26"},{"size":441,"mtime":1611958408000,"results":"42","hashOfConfig":"26"},{"size":1019,"mtime":1612033200000,"results":"43","hashOfConfig":"26"},{"size":1888,"mtime":1614297097503,"results":"44","hashOfConfig":"26"},{"size":1446,"mtime":1612033218000,"results":"45","hashOfConfig":"26"},{"size":610,"mtime":1614294579829,"results":"46","hashOfConfig":"26"},{"size":377,"mtime":1614105830000,"results":"47","hashOfConfig":"26"},{"size":763,"mtime":1614107076000,"results":"48","hashOfConfig":"26"},{"size":2153,"mtime":1648935762819,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tqvkvs",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\index.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\App.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\reportWebVitals.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Firebase.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\Reducers\\root.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Games.js",["102","103"],"import Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport Header from \"./Header\";\r\nimport {FaPlaystation} from \"react-icons/fa\";\r\nimport {FaXbox} from \"react-icons/fa\";\r\nimport {FaWindows} from \"react-icons/fa\";\r\nimport {SiNintendoswitch} from \"react-icons/si\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nfunction Games() {\r\n    const [title, setTitle] = useState(\"Popularity\");\r\n    const [games, setGames] = useState([]);\r\n    const [url, seturl] = useState([\"\"]);\r\n\r\n    // tracking on which page we currently are\r\n    const [page, setPage] = useState(1);\r\n    // add loader refrence\r\n    const loader = useRef(null);\r\n\r\n    useEffect(() => {\r\n        var options = {\r\n            root: null,\r\n            rootMargin: \"20px\",\r\n            threshold: 1.0,\r\n        };\r\n        // initialize IntersectionObserver\r\n        // and attaching to Load More div\r\n        const observer = new IntersectionObserver(handleObserver, options);\r\n        if (loader.current) {\r\n            observer.observe(loader.current);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Fecthgames(page, url);\r\n    }, [page, url]);\r\n\r\n    const handleObserver = (entities) => {\r\n        const target = entities[0];\r\n        if (target.isIntersecting) {\r\n            setPage((page) => page + 1);\r\n        }\r\n    };\r\n\r\n    const Fecthgames = (page, url) => {\r\n        fetch(\r\n            `https://api.rawg.io/api/games?key=bfd5f2572bfa44d59a6b934e77eb37c0&parent_platforms=1,2,3,7${url}&page_size=24&page=${page}`\r\n        )\r\n            .then((resp) => resp.json())\r\n            .then(({results}) => {\r\n                setGames([...games, ...results]);\r\n            });\r\n    };\r\n\r\n    const platforms = (e) => {\r\n        let a = e.platform.name;\r\n        switch (a) {\r\n            case \"PC\":\r\n                return <FaWindows/>;\r\n            case \"PlayStation\":\r\n                return <FaPlaystation/>;\r\n            case \"Xbox\":\r\n                return <FaXbox/>;\r\n            case \"Nintendo\":\r\n                return <SiNintendoswitch/>;\r\n        }\r\n    };\r\n\r\n    const clickHandler = (e) => {\r\n        let a = e.target.innerHTML;\r\n        switch (a) {\r\n            case \"Name\":\r\n                seturl(\"&ordering=name\");\r\n                setPage(1);\r\n                setTitle(\"Name\");\r\n                setGames([]);\r\n                break;\r\n            case \"Release Date\":\r\n                seturl(\"&ordering=released\");\r\n                setPage(1);\r\n                setTitle(\"Release Date\");\r\n                setGames([]);\r\n                break;\r\n            case \"Rating\":\r\n                seturl(\"&ordering=-metacritic\");\r\n                setPage(1);\r\n                setTitle(\"Rating\");\r\n                setGames([]);\r\n                break;\r\n            default:\r\n                seturl(\"\");\r\n                setPage(1);\r\n                setTitle(\"Popularity\");\r\n                setGames([]);\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Body\">\r\n            <Header/>\r\n            <h1>All Games</h1>\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                    Sort by: <b>{title}</b>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu className=\"drop\">\r\n                    <Dropdown.Item onClick={clickHandler}>Name</Dropdown.Item>\r\n                    <Dropdown.Item onClick={clickHandler}>Popularity</Dropdown.Item>\r\n                    <Dropdown.Item onClick={clickHandler}>Release Date</Dropdown.Item>\r\n                    <Dropdown.Item onClick={clickHandler}>Rating</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <div>\r\n                <CardDeck>\r\n                    {games.map((game) => (\r\n                        <Card key={game.id}>\r\n                            <Link\r\n                                to={{pathname: `/${game.name}`, Gamedetails: {game: game}}}\r\n                            >\r\n                                <div className=\"imgc\">\r\n                                    <Card.Img variant=\"top\" src={game.background_image}/>\r\n                                </div>\r\n                                <div className=\"hover\">\r\n                                    {game.parent_platforms.map((platform) => (\r\n                                        <div className=\"icons\">{platforms(platform)}</div>\r\n                                    ))}\r\n                                </div>\r\n                                <Card.Body>\r\n                                    <Card.Title>{game.name}</Card.Title>\r\n                                </Card.Body>\r\n                            </Link>\r\n                        </Card>\r\n                    ))}\r\n                </CardDeck>\r\n                <div className=\"loading\" ref={loader}>\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Games;\r\n",["104","105"],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Game.js",["106","107","108","109","110","111","112","113","114","115","116"],"import React, {useState, useEffect} from \"react\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Header from \"./Header\";\r\nimport {FaPlaystation, FaWindows, FaXbox} from \"react-icons/fa\";\r\nimport {SiNintendoswitch} from \"react-icons/si\";\r\nimport {MdFavoriteBorder} from \"react-icons/md\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {MdFavorite} from \"react-icons/md\";\r\nimport addFavorite from \"../Store/actions/FavoriteActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\n\r\nfunction Game(props) {\r\n    const {game} = props.location.Gamedetails;\r\n    const {favorites} = props;\r\n    const [condition, setCondition] = useState(false);\r\n    const [news, setNews] = useState([]);\r\n    const [gameResults, setGameResults] = useState([]);\r\n    const [GameVideo, setGameVideo] = useState([]);\r\n    const [GameScreenshots, setGameScreenshots] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchGame();\r\n        fetchVideo();\r\n        fetchScreenshot();\r\n        fetchNews();\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        checkButton();\r\n    }, [condition, gameResults]);\r\n\r\n    const responsive = {\r\n        desktop: {\r\n            breakpoint: {max: 3000, min: 1200},\r\n            items: 3,\r\n            slidesToSlide: 3, // optional, default to 1.\r\n        },\r\n        laptop: {\r\n            breakpoint: {max: 1200, min: 800},\r\n            items: 2,\r\n            slidesToSlide: 2, // optional, default to 1.\r\n        },\r\n        tablet: {\r\n            breakpoint: {max: 800, min: 464},\r\n            items: 1,\r\n            slidesToSlide: 1, // optional, default to 1.\r\n        },\r\n        mobile: {\r\n            breakpoint: {max: 464, min: 0},\r\n            items: 1,\r\n            slidesToSlide: 1, // optional, default to 1.\r\n        },\r\n    };\r\n\r\n    const fetchGame = () => {\r\n        fetch(\r\n            `https://api.rawg.io/api/games?key=bfd5f2572bfa44d59a6b934e77eb37c0&${game.id}`\r\n        )\r\n            .then((resp) => resp.json())\r\n            .then((results) => {\r\n                setGameResults(results);\r\n            });\r\n    };\r\n\r\n    const fetchVideo = () => {\r\n        fetch(\r\n            `https://api.rawg.io/api/games?key=bfd5f2572bfa44d59a6b934e77eb37c0&${game.id}`\r\n        )\r\n            .then((resp) => resp.json())\r\n            .then((results) => {\r\n                setGameVideo(results.clip);\r\n            });\r\n    };\r\n    const clip = () => {\r\n        if (GameVideo) {\r\n            return (\r\n                <div>\r\n                    <video controls className=\"video\" src={GameVideo.clip}></video>\r\n                </div>\r\n            );\r\n        } else {\r\n\r\n        }\r\n    };\r\n    const thenews = () => {\r\n        if (news != \"\") {\r\n            return (\r\n                <div>\r\n                    <h4>News</h4>\r\n                    <Carousel\r\n                        responsive={responsive}\r\n                        ssr\r\n                        infinite={false}\r\n                        containerClass=\"first-carousel-container container\"\r\n                    >\r\n                        {news.map((neww) => (\r\n                            <card className=\"newscard\" key={neww.source.id}>\r\n                                <a href={neww.url}>\r\n                                    <img className=\"w-100\" src={neww.urlToImage}/>\r\n                                    <Card.Body className=\"headline\">\r\n                                        <Card.Title>{neww.title}</Card.Title>\r\n                                    </Card.Body>\r\n                                </a>\r\n                            </card>\r\n                        ))}\r\n                    </Carousel>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n    const fetchScreenshot = () => {\r\n        fetch(\r\n            `https://api.rawg.io/api/games?key=bfd5f2572bfa44d59a6b934e77eb37c0&${game.id}/screenshots`\r\n        )\r\n            .then((resp) => resp.json())\r\n            .then(({results}) => {\r\n                setGameScreenshots(results.slice(0, 2));\r\n            });\r\n    };\r\n    const fetchNews = () => {\r\n        fetch(\r\n            `https://newsapi.org/v2/everything?qInTitle=\"${game.name}\"&language=en&apiKey=72654d1db08c42c190a91bd772d52143`\r\n        )\r\n            .then((resp) => resp.json())\r\n            .then(({articles}) => {\r\n                setNews(articles);\r\n            });\r\n    };\r\n    const platforms = (e) => {\r\n        let a = e.platform.name;\r\n        switch (a) {\r\n            case \"PC\":\r\n                return <FaWindows/>;\r\n            case \"PlayStation\":\r\n                return <FaPlaystation/>;\r\n            case \"Xbox\":\r\n                return <FaXbox/>;\r\n            case \"Nintendo\":\r\n                return <SiNintendoswitch/>;\r\n        }\r\n    };\r\n    const checkButton = () => {\r\n        favorites &&\r\n        favorites.map((favorite) => {\r\n            if (favorite.id == gameResults.id) {\r\n                setCondition(true);\r\n            }\r\n        });\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.addFavorite(gameResults);\r\n    };\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className=\"gamehead\">\r\n                <img className=\"gameimg\" src={gameResults.background_image}/>\r\n            </div>\r\n            <div className=\"GameBody\">\r\n                <div className=\"gameheader\">\r\n                    <div className=\"gamecard\">\r\n                        <h2>\r\n                            {gameResults.name}\r\n                            {condition ? (\r\n                                <Button variant=\"favbtn\">\r\n                                    <MdFavorite size=\"2.5rem\"/>\r\n                                </Button>\r\n                            ) : (\r\n                                <Button onClick={handleSubmit} variant=\"favbtn\">\r\n                                    <MdFavoriteBorder size=\"2.5rem\"/>\r\n                                </Button>\r\n                            )}\r\n                        </h2>\r\n                        {game.parent_platforms.map((platform) => (\r\n                            <div className=\"icons\">{platforms(platform)}</div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"infsec pt-0 pl-xl-5\">\r\n                        <div className=\"gameinf\">\r\n                            <h4>Rating</h4>\r\n                            <h5 className=\"texto\">\r\n                                {gameResults.metacritic ? gameResults.metacritic : \"-\"}\r\n                            </h5>\r\n                        </div>\r\n                        <div className=\"gameinf\">\r\n                            <h4>Release Date</h4>\r\n                            <h5 className=\"texto\">\r\n                                {gameResults.released ? gameResults.released : \"-\"}\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h4>Description</h4>\r\n                <div>{gameResults.description_raw}</div>\r\n                <Row className=\"px-3\">\r\n                    <Col className=\"col-12 mt-2 col-sm-7 pl-0\">\r\n                        <h6>Platforms</h6>\r\n                        <h6>\r\n                            {game.platforms.map((p) => (\r\n                                <span className=\"texto\">\r\n                  <u>{p.platform.name}</u>,{\" \"}\r\n                </span>\r\n                            ))}\r\n                        </h6>\r\n                    </Col>\r\n                    <Col className=\"col-sm-3 mt-2 col-6 pl-0\">\r\n                        <h6>Genre</h6>\r\n                        <h6>\r\n                            {game.genres.length > 0\r\n                                ? game.genres.map((p) => (\r\n                                    <span className=\"texto\">\r\n                      <u>{p.name}</u>,{\" \"}\r\n                    </span>\r\n                                ))\r\n                                : \"-\"}\r\n                        </h6>\r\n                    </Col>\r\n                    <Col className=\"col-sm-2 mt-2 col-6 pl-0\">\r\n                        <h6>Age Rating</h6>\r\n                        <h6 className=\"texto\">\r\n                            {game.esrb_rating ? game.esrb_rating.name : \"-\"}\r\n                        </h6>\r\n                    </Col>\r\n                    <Col className=\"col-lg-7 col-12 mt-4 pl-0 pr-4\">\r\n                        <h6>Tags</h6>\r\n                        <h6>\r\n                            {game.tags\r\n                                ? game.tags.map((p) => {\r\n                                    if (p.language == \"eng\") {\r\n                                        return (\r\n                                            <span className=\"texto\">\r\n                          <u>{p.name}</u>,{\" \"}\r\n                        </span>\r\n                                        );\r\n                                    }\r\n                                })\r\n                                : \"-\"}\r\n                        </h6>\r\n                    </Col>\r\n                    <Col className=\"col-lg-5 col-12 mt-4 p-0\">\r\n                        <h6>Where to buy</h6>\r\n                        <h6>\r\n                            {gameResults.stores\r\n                                ? gameResults.stores.map((p) => (\r\n                                    <a href={p.url ? p.url : null}>\r\n                                        <button className=\"btn-dark p-4 mr-2 mb-2\">\r\n                                            {p.store.name}\r\n                                        </button>\r\n                                    </a>\r\n                                ))\r\n                                : \"-\"}\r\n                        </h6>\r\n                    </Col>\r\n                </Row>\r\n                <h4>Media</h4>\r\n                <div>{clip()}</div>\r\n\r\n                <Row className=\"px-2\">\r\n                    {GameScreenshots.map((ima) => (\r\n                        <Col md={6} className=\"p-0\">\r\n                            <img className=\"p-1 w-100\" src={ima.image}/>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                {thenews()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addFavorite: (favorite) => dispatch(addFavorite(favorite)),\r\n    };\r\n};\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        favorites: state.firebase.profile.favoritos,\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{collection: `users`}])\r\n)(Game);\r\n","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Xbox.js",["117","118"],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\PC.js",["119","120","121","122","123","124"],"import Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { FaPlaystation } from \"react-icons/fa\";\r\nimport { FaXbox } from \"react-icons/fa\";\r\nimport { FaWindows } from \"react-icons/fa\";\r\nimport { SiNintendoswitch } from \"react-icons/si\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nfunction Games() {\r\n  const [title, setTitle] = useState(\"Popularity\");\r\n  const [games, setGames] = useState([]);\r\n  const [url, seturl] = useState([\"\"]);\r\n\r\n  // tracking on which page we currently are\r\n  const [page, setPage] = useState(1);\r\n  // add loader refrence\r\n  const loader = useRef(null);\r\n\r\n  useEffect(() => {\r\n    var options = {\r\n      root: null,\r\n      rootMargin: \"20px\",\r\n      threshold: 1.0,\r\n    };\r\n    // initialize IntersectionObserver\r\n    // and attaching to Load More div\r\n    const observer = new IntersectionObserver(handleObserver, options);\r\n    if (loader.current) {\r\n      observer.observe(loader.current);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Fecthgames(page, url);\r\n  }, [page, url]);\r\n\r\n  const handleObserver = (entities) => {\r\n    const target = entities[0];\r\n    if (target.isIntersecting) {\r\n      setPage((page) => page + 1);\r\n    }\r\n  };\r\n\r\n  const Fecthgames = (page, url) => {\r\n    fetch(\r\n      `https://api.rawg.io/api/games?key=bfd5f2572bfa44d59a6b934e77eb37c0&parent_platforms=1${url}&page_size=24&page=${page}`\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then(({ results }) => {\r\n        setGames([...games, ...results]);\r\n      });\r\n  };\r\n\r\n  const platforms = (e) => {\r\n    let a = e.platform.name;\r\n    switch (a) {\r\n      case \"PC\":\r\n        return <FaWindows />;\r\n      case \"PlayStation\":\r\n        return <FaPlaystation />;\r\n      case \"Xbox\":\r\n        return <FaXbox />;\r\n      case \"Nintendo\":\r\n        return <SiNintendoswitch />;\r\n    }\r\n  };\r\n\r\n  const clickHandler = (e) => {\r\n    let a = e.target.innerHTML;\r\n    switch (a) {\r\n      case \"Name\":\r\n        seturl(\"&ordering=name\");\r\n        setPage(1);\r\n        setTitle(\"Name\");\r\n        setGames([]);\r\n        break;\r\n      case \"Release Date\":\r\n        seturl(\"&ordering=released\");\r\n        setPage(1);\r\n        setTitle(\"Release Date\");\r\n        setGames([]);\r\n        break;\r\n      case \"Rating\":\r\n        seturl(\"&ordering=-metacritic\");\r\n        setPage(1);\r\n        setTitle(\"Rating\");\r\n        setGames([]);\r\n        break;\r\n      default:\r\n        seturl(\"\");\r\n        setPage(1);\r\n        setTitle(\"Popularity\");\r\n        setGames([]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Body\">\r\n      <Header />\r\n      <h1>Games for PC</h1>\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n          Sort by: <b>{title}</b>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu className=\"drop\">\r\n          <Dropdown.Item onClick={clickHandler}>Name</Dropdown.Item>\r\n          <Dropdown.Item onClick={clickHandler}>Popularity</Dropdown.Item>\r\n          <Dropdown.Item onClick={clickHandler}>Release Date</Dropdown.Item>\r\n          <Dropdown.Item onClick={clickHandler}>Rating</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <div>\r\n        <CardDeck>\r\n          {games.map((game) => (\r\n            <Card key={game.id}>\r\n              <Link\r\n                to={{ pathname: `/${game.name}`, Gamedetails: { game: game } }}\r\n              >\r\n                <div className=\"imgc\">\r\n                  <Card.Img variant=\"top\" src={game.background_image} />\r\n                </div>\r\n                <div className=\"hover\">\r\n                  {game.parent_platforms.map((platform) => (\r\n                    <div className=\"icons\">{platforms(platform)}</div>\r\n                  ))}\r\n                </div>\r\n                <Card.Body>\r\n                  <Card.Title>{game.name}</Card.Title>\r\n                </Card.Body>\r\n              </Link>\r\n            </Card>\r\n          ))}\r\n        </CardDeck>\r\n        <div className=\"loading\" ref={loader}>\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Games;\r\n","C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Nintendo.js",["125","126"],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Login.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Upcoming.js",["127","128"],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\signUp.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\PlayStation.js",["129","130"],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Favorites.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Results.js",["131","132"],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\Reducers\\favoriteReducer.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\Reducers\\authReducer.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Header.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\actions\\AuthActions.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Store\\actions\\FavoriteActions.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\SignOutLinks.js",[],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\SignInLinks.js",["133"],"C:\\Users\\User\\OneDrive\\Documentos\\Portfolio\\Projeto LAB5\\src\\Components\\Search.js",["134"],{"ruleId":"135","severity":1,"message":"136","line":39,"column":6,"nodeType":"137","endLine":39,"endColumn":17,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":60,"column":5,"nodeType":"141","messageId":"142","endLine":69,"endColumn":6},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"135","severity":1,"message":"147","line":32,"column":8,"nodeType":"137","endLine":32,"endColumn":14,"suggestions":"148"},{"ruleId":"135","severity":1,"message":"149","line":36,"column":8,"nodeType":"137","endLine":36,"endColumn":32,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":92,"column":18,"nodeType":"153","messageId":"154","endLine":92,"endColumn":20},{"ruleId":"155","severity":1,"message":"156","line":105,"column":37,"nodeType":"157","endLine":105,"endColumn":83},{"ruleId":"139","severity":1,"message":"140","line":138,"column":9,"nodeType":"141","messageId":"142","endLine":147,"endColumn":10},{"ruleId":"158","severity":1,"message":"159","line":151,"column":34,"nodeType":"160","messageId":"161","endLine":151,"endColumn":36},{"ruleId":"151","severity":1,"message":"162","line":152,"column":29,"nodeType":"153","messageId":"154","endLine":152,"endColumn":31},{"ruleId":"155","severity":1,"message":"156","line":165,"column":17,"nodeType":"157","endLine":165,"endColumn":78},{"ruleId":"158","severity":1,"message":"163","line":236,"column":53,"nodeType":"160","messageId":"164","endLine":236,"endColumn":55},{"ruleId":"151","severity":1,"message":"162","line":237,"column":52,"nodeType":"153","messageId":"154","endLine":237,"endColumn":54},{"ruleId":"155","severity":1,"message":"156","line":269,"column":29,"nodeType":"157","endLine":269,"endColumn":73},{"ruleId":"135","severity":1,"message":"136","line":39,"column":8,"nodeType":"137","endLine":39,"endColumn":19,"suggestions":"165"},{"ruleId":"139","severity":1,"message":"140","line":60,"column":9,"nodeType":"141","messageId":"142","endLine":69,"endColumn":10},{"ruleId":"135","severity":1,"message":"136","line":39,"column":6,"nodeType":"137","endLine":39,"endColumn":17,"suggestions":"166"},{"ruleId":"139","severity":1,"message":"140","line":60,"column":5,"nodeType":"141","messageId":"142","endLine":73,"endColumn":6},{"ruleId":"167","severity":1,"message":"168","line":63,"column":9,"nodeType":"169","messageId":"170","endLine":63,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":66,"column":9,"nodeType":"169","messageId":"170","endLine":66,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":69,"column":9,"nodeType":"169","messageId":"170","endLine":69,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":72,"column":9,"nodeType":"169","messageId":"170","endLine":72,"endColumn":15},{"ruleId":"135","severity":1,"message":"136","line":39,"column":8,"nodeType":"137","endLine":39,"endColumn":19,"suggestions":"171"},{"ruleId":"139","severity":1,"message":"140","line":60,"column":9,"nodeType":"141","messageId":"142","endLine":69,"endColumn":10},{"ruleId":"135","severity":1,"message":"172","line":17,"column":8,"nodeType":"137","endLine":17,"endColumn":10,"suggestions":"173"},{"ruleId":"139","severity":1,"message":"140","line":71,"column":9,"nodeType":"141","messageId":"142","endLine":80,"endColumn":10},{"ruleId":"135","severity":1,"message":"136","line":39,"column":8,"nodeType":"137","endLine":39,"endColumn":19,"suggestions":"174"},{"ruleId":"139","severity":1,"message":"140","line":60,"column":9,"nodeType":"141","messageId":"142","endLine":69,"endColumn":10},{"ruleId":"135","severity":1,"message":"136","line":49,"column":6,"nodeType":"137","endLine":49,"endColumn":20,"suggestions":"175"},{"ruleId":"151","severity":1,"message":"162","line":58,"column":20,"nodeType":"153","messageId":"154","endLine":58,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":10,"column":16,"nodeType":"157","endLine":10,"endColumn":43},{"ruleId":"155","severity":1,"message":"156","line":51,"column":19,"nodeType":"157","endLine":51,"endColumn":54},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Fecthgames'. Either include it or remove the dependency array.","ArrayExpression",["178"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"React Hook useEffect has missing dependencies: 'fetchGame', 'fetchNews', 'fetchScreenshot', and 'fetchVideo'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has a missing dependency: 'checkButton'. Either include it or remove the dependency array.",["182"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["183"],["184"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["185"],"React Hook useEffect has missing dependencies: 'Fecthgames' and 'Fecthnextgames'. Either include them or remove the dependency array.",["186"],["187"],["188"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"189","fix":"190"},"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"189","fix":"195"},{"desc":"189","fix":"196"},{"desc":"189","fix":"197"},{"desc":"198","fix":"199"},{"desc":"189","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [Fecthgames, page, url]",{"range":"203","text":"204"},"Update the dependencies array to be: [fetchGame, fetchNews, fetchScreenshot, fetchVideo, game]",{"range":"205","text":"206"},"Update the dependencies array to be: [checkButton, condition, gameResults]",{"range":"207","text":"208"},{"range":"209","text":"204"},{"range":"210","text":"204"},{"range":"211","text":"204"},"Update the dependencies array to be: [Fecthgames, Fecthnextgames]",{"range":"212","text":"213"},{"range":"214","text":"204"},"Update the dependencies array to be: [Fecthgames, page, search]",{"range":"215","text":"216"},[1233,1244],"[Fecthgames, page, url]",[1248,1254],"[fetchGame, fetchNews, fetchScreenshot, fetchVideo, game]",[1314,1338],"[checkButton, condition, gameResults]",[1299,1310],[1233,1244],[1299,1310],[616,618],"[Fecthgames, Fecthnextgames]",[1299,1310],[1267,1281],"[Fecthgames, page, search]"]